@model IEnumerable<VictuZWebProject.Models.ActivityViewModel>
@{
    ViewData["Title"] = "Home Page";

    var upcomingActivities = Model
        .Where(activity => activity.Activity.DateDue >= DateTime.Now)
        .OrderBy(activity => activity.Activity.DateDue)
        .Take(3)
        .ToList();
}

<style>

    .header-container {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        background: url('/images/backgroundimage3.png') no-repeat center center;
        background-size: cover;
        color: white;
        padding: 20px 20px; 
        min-height: 600px; 
        text-align: center;
        overflow: hidden;
    }

        .header-container .logo {
            width: 600px; 
            height: auto;
            margin-bottom: 0px; 
        }

    .carousel-container {
        position: relative;
        overflow: hidden;
        width: 80%; 
        max-width: 1600px; 
        margin-top: 0; 
        margin-bottom: 20px; 
        padding: 20px 0;
    }

    .carousel-track {
        display: flex;
        transition: transform 0.5s ease;
        gap: 10px; 
    }

    .carousel-card {
        flex: 0 0 auto;
        width: 33.333%;
        box-sizing: border-box;
        padding: 5px; 
        transition: transform 0.3s ease, opacity 0.3s ease;
        background-color: white;
        color: #3c4047;
        border-radius: 12px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

        .carousel-card.center-card {
            transform: scale(1.05);
            opacity: 1;
        }

        .carousel-card:not(.center-card) {
            transform: scale(0.9);
            opacity: 0.6;
        }

        .carousel-card .card {
            background-color: white;
            color: #3c4047;
            border: none;
            box-shadow: none;
        }

        .carousel-card .card-body {
            color: #3c4047;
            padding: 10px;
        }

        .carousel-card.center-card .card-body {
            font-weight: bold;
        }


    .carousel-button-container {
        display: flex;
        justify-content: center;
        margin-top: 5px; 
    }

    .carousel-button {
        background: transparent;
        border: none;
        font-size: 2rem;
        color: rgba(255, 255, 255, 0.6);
        cursor: pointer;
        margin: 0 10px; 
        transition: color 0.3s ease, transform 0.3s ease;
    }

        .carousel-button:hover {
            color: rgba(255, 255, 255, 1);
            transform: scale(1.2);
        }


    .carousel-card .activity-buttons {
        display: none;
    }

    .carousel-card.center-card .activity-buttons {
        display: block;
    }

    .about-section {
        display: flex;
        justify-content: space-between;
        align-items: flex-start; 
        padding: 60px 10%;
        background-color: #f9f9f9;
        color: #3c4047;
    }

    .about-content {
        flex: 1;
        padding-right: 40px;
    }

    .about-title {
        font-size: 2.5rem; 
        font-weight: bold;
        margin-bottom: 30px;
        color: #318380;
        text-align: left;
    }

    .about-text {
        font-size: 1.2rem;
        line-height: 1.8; 
        margin-bottom: 25px; 
    }

    .about-image-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: flex-start;
    }

    .about-image {
        width: 500px;
        height: 500px; 
        border-radius: 50%;
        object-fit: cover;
        margin-top: 30px; 
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
    }

    .sponsors-section {
        background-color: #2C9C98;
        color: white;
        padding: 60px 10%;
        text-align: center;
    }

    .sponsors-title {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 40px;
        color: white;
    }

    .sponsors-grid {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 40px;
    }


        .sponsors-grid + .sponsors-grid {
            margin-top: 40px; 
        }

    .sponsor-item {
        position: relative;
        width: 250px;
        height: 250px;
        border-radius: 10px;
        overflow: hidden;
        background-color: #ffffff;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .sponsor-item:hover {
            transform: scale(1.05);
        }

        .sponsor-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: opacity 0.3s ease;
        }

    .sponsor-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        font-size: 1.5rem;
        font-weight: bold;
        transition: opacity 0.3s ease;
    }

    .sponsor-item:hover .sponsor-overlay {
        opacity: 1;
    }

    .sponsor-item:hover img {
        opacity: 0.7;
    }

</style>



<div class="header-container">

    <img src="/images/VictuZLogoTransparent.webp" alt="VictuZ Logo" class="logo" />


    <div class="carousel-container">
        <div class="carousel-track">
            @if (upcomingActivities.Any())
            {
                foreach (var item in upcomingActivities)
                {
                    <div class="carousel-card @(item == upcomingActivities[1] ? "center-card" : "")">
                        <div class="card h-100 border-0">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@item.Activity.Name</h5>
                                <p class="card-text">@item.Activity.Body</p>
                                <small class="text-muted">Locatie: @item.Activity.Location</small>
                                <small class="text-muted">Datum: @item.Activity.DateDue.ToString("MMMM dd, h:mm tt")</small>

                                <div class="d-flex justify-content-end mt-3 activity-buttons">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        @if (item.IsUserRegistered)
                                        {
                                            <form asp-action="Unregister" asp-route-id="@item.Activity.ActivityId" method="post" style="display:inline;">
                                                <button type="submit" class="btn btn-danger">Uitschrijven</button>
                                            </form>
                                        }
                                        else if (item.Activity.Registered < item.Activity.MaxCapacity)
                                        {
                                            <a asp-action="Register" asp-route-id="@item.Activity.ActivityId" class="btn" style="background-color: #20c997; color: white;">Inschrijven</a>
                                        }
                                        else
                                        {
                                            <a class="btn btn-secondary disabled" aria-disabled="true">Vol</a>
                                        }
                                    }
                                    else
                                    {
                                        <a class="btn btn-secondary disabled" aria-disabled="true">Log in om in te schrijven</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No upcoming activities found.</p>
            }
        </div>
    </div>

    <div class="carousel-button-container">
        <button class="carousel-button carousel-button-prev">←</button>
        <button class="carousel-button carousel-button-next">→</button>
    </div>

    <div class="carousel-all-activities-button">
        <a asp-action="Index" asp-controller="Activities" class="btn btn-primary" style="background-color: #20c997; color: white; margin-top: 10px;">
            Alle Activiteiten
        </a>
    </div>
</div>



<div class="about-section">
    <div class="about-content">
        <div class="about-title">Wie zijn wij?</div>
        <p class="about-text">
            Welkom bij VictuZ! Wij zijn een levendige en betrokken gemeenschap die zich richt op het organiseren van
            diverse activiteiten, educatieve workshops en boeiende evenementen. Onze kernwaarden zijn verbinding,
            leren en groei, en we geloven dat samenkomen mensen helpt om hun talenten te ontdekken en nieuwe relaties
            op te bouwen.
        </p>
        <p class="about-text">
            Met een team van gepassioneerde vrijwilligers zetten we ons in om unieke ervaringen te creëren voor onze
            leden en bezoekers. We bieden een breed scala aan activiteiten, van sport en kunst tot gemeenschapsprojecten
            en professionele netwerkevenementen. Bij VictuZ is er voor iedereen wel iets te beleven!
        </p>
        <p class="about-text">
            We streven ernaar om onze leden te inspireren en te ondersteunen bij hun persoonlijke en professionele
            ontwikkeling. Door middel van workshops en interactieve sessies bieden we de mogelijkheid om nieuwe
            vaardigheden te leren en bestaande talenten te versterken.
        </p>
    </div>
    <div class="about-image-container">
        <img src="/images/zuydimage.jfif" alt="Over ons afbeelding" class="about-image" />
    </div>
</div>

<div class="sponsors-section">
    <div class="sponsors-title">Onze Sponsors</div>
    <div class="sponsors-grid">
        <div class="sponsor-item">
            <img src="/images/Sponsor_Resolve2.png" alt="Resolve" />
            <div class="sponsor-overlay">Resolve</div>
        </div>
        <div class="sponsor-item">
            <img src="/images/Sponsor_McDonalds.jpg" alt="McDonalds" />
            <div class="sponsor-overlay">McDonalds</div>
        </div>
        <div class="sponsor-item">
            <img src="/images/Sponsor_Monster.jpg" alt="Monster Energy" />
            <div class="sponsor-overlay">Monster Energy</div>
        </div>
        <div class="sponsor-item">
            <img src="/images/Sponsor_SL.jpg" alt="Survey Corps" />
            <div class="sponsor-overlay">Survey Corps</div>
        </div>
    </div>

</div>




<script>
    document.addEventListener('DOMContentLoaded', function () {
        const track = document.querySelector('.carousel-track');
        const cards = Array.from(track.children);
        const cardWidth = cards[0].offsetWidth;
        let currentIndex = 0;

        if (cards.length === 3) {
            const firstClone = track.firstElementChild.cloneNode(true);
            const lastClone = track.lastElementChild.cloneNode(true);
            track.appendChild(firstClone);
            track.insertBefore(lastClone, track.firstElementChild);
            currentIndex = 1;
        }

        track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
        updateCenterCard();

        function moveToNext() {
            currentIndex++;
            track.style.transition = 'transform 0.5s ease';
            track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
            updateCenterCard();

            if (currentIndex === cards.length) {
                setTimeout(() => {
                    track.style.transition = 'none';
                    currentIndex = 0;
                    track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
                    updateCenterCard();
                }, 500);
            }
        }

        function moveToPrev() {
            currentIndex--;
            track.style.transition = 'transform 0.5s ease';
            track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
            updateCenterCard();

            if (currentIndex < 0) {
                setTimeout(() => {
                    track.style.transition = 'none';
                    currentIndex = cards.length - 1;
                    track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
                    updateCenterCard();
                }, 500);
            }
        }

        function updateCenterCard() {
            cards.forEach((card, index) => {
                card.classList.remove('center-card');
                const buttonContainer = card.querySelector('.activity-buttons');
                if (buttonContainer) {
                    buttonContainer.style.display = 'none';
                }

                if (index === currentIndex % cards.length) {
                    card.classList.add('center-card');
                    const buttonContainer = card.querySelector('.activity-buttons');
                    if (buttonContainer) {
                        buttonContainer.style.display = 'block';
                    }
                }
            });
        }

        document.querySelector('.carousel-button-next').addEventListener('click', moveToNext);
        document.querySelector('.carousel-button-prev').addEventListener('click', moveToPrev);

        setInterval(moveToNext, 5000);
    });
</script>

